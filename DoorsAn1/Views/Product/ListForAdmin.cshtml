@using Microsoft.AspNetCore.Mvc.Rendering
@model ProductListViewModel
@{   
    Layout = "_LayoutProducts";   
    ViewBag.Title = "Список товаров";
}

<div class="row">
    <div class="col-lg-16 col-md-16 col-sm-16 col-xs-16">
        <a class="btn btn-info btn-add" asp-action="Create">Добавить товар</a>
    </div>
</div>

<form method="get">
    <div class="form-inline form-group pull-right">
        <label class="control-label">Имя: </label>
        @Html.TextBox("name", Model.FilterViewModel.SelectedName, htmlAttributes: new { @class = "form-control" })

        <label class="control-label">Категория: </label>
        @Html.DropDownList("category", Model.FilterViewModel.Categories as SelectList,
                htmlAttributes: new { @class = "form-control" })

        <input type="submit" value="Найти" class="btn btn-default" />
    </div>
</form>

<table class="table table-striped">
    <thead>
    <tr>
        <th>
            <a asp-action="ListForAdmin"
               asp-route-sortOrder="@(Model.SortViewModel.NameSort)"
               asp-route-name="@(Model.FilterViewModel.SelectedName)"
               asp-route-category="@(Model.FilterViewModel.SelectedCategory)">
                Название
            </a>
        </th>
        <th>
            <a asp-action="ListForAdmin"
               asp-route-sortOrder="@(Model.SortViewModel.CategorySort)"
               asp-route-name="@(Model.FilterViewModel.SelectedName)"
               asp-route-category="@(Model.FilterViewModel.SelectedCategory)">
                Категория
            </a>
        </th>
        <th>
            <a asp-action="ListForAdmin"
               asp-route-sortOrder="@(Model.SortViewModel.StatusSort)"
               asp-route-name="@(Model.FilterViewModel.SelectedName)"
               asp-route-category="@(Model.FilterViewModel.SelectedCategory)">
                Статус
            </a>
        </th>
        <th></th>
    </tr>
    </thead>
    @foreach (var item in Model.Products)
    {
        <tr>
            <td>@item.Name</td>
            <td>@item.Category.CategoryName</td>
            <td>@if (item.Status.Equals(true))
                {
                    <p>В наличии</p>
                }
                else
                {<p>В наличии нет</p>
                }</td>
            <td>                     
                <a class="btn btn-space btn-primary glyphicon glyphicon-pencil pull-right" asp-action="Edit" asp-controller="Product" asp-route-id="@item.ProductId"/>
                <a class="btn btn-space btn-danger glyphicon glyphicon-trash pull-right" asp-action="Delete" asp-controller="Product" asp-route-id="@item.ProductId"/>              
            </td>
        </tr>
    }
</table>
@if (Model.PageViewModel.HasPreviousPage)
{
    <a asp-action="ListForAdmin"
       asp-route-page="@(Model.PageViewModel.PageNumber - 1)"
       asp-route-name="@(Model.FilterViewModel.SelectedName)"
       asp-route-category="@(Model.FilterViewModel.SelectedCategory)"
       asp-route-sortorder="@(Model.SortViewModel.Current)"
       class="btn btn-secondary">
        <i class="glyphicon glyphicon-chevron-left"></i>
        Назад
    </a>
}
@if (Model.PageViewModel.HasNextPage)
{
    <a asp-action="ListForAdmin"
       asp-route-page="@(Model.PageViewModel.PageNumber + 1)"
       asp-route-name="@(Model.FilterViewModel.SelectedName)"
       asp-route-category="@(Model.FilterViewModel.SelectedCategory)"
       asp-route-sortorder="@(Model.SortViewModel.Current)"
       class="btn btn-secondary">
        Вперед
        <i class="glyphicon glyphicon-chevron-right"></i>
    </a>
}
<br>